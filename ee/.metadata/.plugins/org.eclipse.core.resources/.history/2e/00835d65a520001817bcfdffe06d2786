import java.util.ArrayList;
import java.util.ListIterator;

import Linklist.LinkedList.Node;

public class BasicDoubleLinkedList <T> {
	int size =0;
	Node last,first;
	public void addToEnd(T elem) {
		// TODO Auto-generated method stub
		
	}

	public int getSize() {
		// TODO Auto-generated method stub
		return size;
	}

	public T getLast() {
		// TODO Auto-generated method stub
		return last;
	}

	public T getFirst() {
		// TODO Auto-generated method stub
		return first;
	}

	public void addToFront(T elem) {
		// TODO Auto-generated method stub
		
	}

	public ListIterator<T> iterator() {
		// TODO Auto-generated method stub
		return null;
	}

	public void remove(T elem,  java.util.Comparator<T> comparator) {
		// TODO Auto-generated method stub
		
	}



	public Object retrieveFirstElement() {
		// TODO Auto-generated method stub
		return null;
	}

	public Object retrieveLastElement() {
		// TODO Auto-generated method stub
		return null;
	}

	public ArrayList<String> toArrayList() {
		// TODO Auto-generated method stub
		return null;
	}

	public class Node
	{  private T item;
	private Node next,previous;
	public Node() {}
	}
}

